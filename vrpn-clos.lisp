;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.0
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(cl:in-package :vrpn)

(cl:defclass vrpn-base-class-unique()
  ((ff-pointer :reader ff-pointer)))

(cl:defmethod initialize-instance :after ((obj vrpn-base-class-unique) &key)
  (setf (slot-value obj 'ff-pointer) (new_vrpn_BaseClassUnique)))


(cl:defclass vrpn-base-class(vrpn-base-class-unique)
  ((ff-pointer :reader ff-pointer)))

(cl:defmethod mainloop ((self vrpn-base-class))
  (vrpn_BaseClass_mainloop (ff-pointer self)))


(cl:defclass vrpn-analog(vrpn-base-class)
  ((ff-pointer :reader ff-pointer)))


(cl:defclass vrpn-analog-remote(vrpn-analog)
  ((ff-pointer :reader ff-pointer)))

(cl:defmethod initialize-instance :after ((obj vrpn-analog-remote) &key (name cl:string) c)
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Analog_Remote name c)))

(cl:defmethod initialize-instance :after ((obj vrpn-analog-remote) &key (name cl:string))
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Analog_Remote name)))

(cl:defmethod mainloop ((self vrpn-analog-remote))
  (vrpn_Analog_Remote_mainloop (ff-pointer self)))

(cl:defmethod register-change-handler ((self vrpn-analog-remote) userdata handler)
  (vrpn_Analog_Remote_register_change_handler (ff-pointer self) userdata handler))

(cl:defmethod unregister-change-handler ((self vrpn-analog-remote) userdata handler)
  (vrpn_Analog_Remote_unregister_change_handler (ff-pointer self) userdata handler))


(cl:defclass vrpn-button(vrpn-base-class)
  ((ff-pointer :reader ff-pointer)))


(cl:defclass vrpn-button-remote(vrpn-button)
  ((ff-pointer :reader ff-pointer)))

(cl:defmethod initialize-instance :after ((obj vrpn-button-remote) &key (name cl:string) cn)
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Button_Remote name cn)))

(cl:defmethod initialize-instance :after ((obj vrpn-button-remote) &key (name cl:string))
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Button_Remote name)))

(cl:defmethod mainloop ((self vrpn-button-remote))
  (vrpn_Button_Remote_mainloop (ff-pointer self)))

(cl:defmethod register-change-handler ((self vrpn-button-remote) userdata handler)
  (vrpn_Button_Remote_register_change_handler (ff-pointer self) userdata handler))

(cl:defmethod unregister-change-handler ((self vrpn-button-remote) userdata handler)
  (vrpn_Button_Remote_unregister_change_handler (ff-pointer self) userdata handler))


(cl:defclass vrpn-tracker(vrpn-base-class)
  ((ff-pointer :reader ff-pointer)))


(cl:defclass vrpn-tracker-remote(vrpn-tracker)
  ((ff-pointer :reader ff-pointer)))

(cl:defmethod initialize-instance :after ((obj vrpn-tracker-remote) &key (name cl:string) c)
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Tracker_Remote name c)))

(cl:defmethod initialize-instance :after ((obj vrpn-tracker-remote) &key (name cl:string))
  (setf (slot-value obj 'ff-pointer) (new_vrpn_Tracker_Remote name)))

(cl:defmethod mainloop ((self vrpn-tracker-remote))
  (vrpn_Tracker_Remote_mainloop (ff-pointer self)))

(cl:defmethod register-change-handler ((self vrpn-tracker-remote) userdata handler)
  (vrpn_Tracker_Remote_register_change_handler (ff-pointer self) userdata handler))

(cl:defmethod unregister-change-handler ((self vrpn-tracker-remote) userdata handler)
  (vrpn_Tracker_Remote_unregister_change_handler (ff-pointer self) userdata handler))

